<?xml version="1.0" encoding="UTF-8"?>
<!-- ================================= 
    Introduction to Service Design and Engineering Laboratory
    Description: ANT build script for the introsde-2015-assignment-1 
    Author: Carlo Nicolò
    
    Notes: 
    
    * This build file includes targets to download and install in your local project the Apache IVY jar
    * IVY is used to manage dependencies on projects (e.g., jaxb libraries, jackson libraries for json, etc.) 
    * 
       TO USE IVY IN YOUR PROJECTS IN ORDER TO GET MANAGE DEPENDENCIES, MAKE SURE THE FOLLOWING LINES ARE
       IN YOUR BUILD.XML UNTILL 'IVY-END-LINE'
       
       # The target "download-ivy" and "install-ivy" will download the ivy jar and place it in the "ivy" folder
       # 
-->
<project name="introsde-2015-assignment-1" default="compile" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">

	<!-- PART 1: Ivy properties, download, installation and configuration -->
	<property name="ivy.install.version" value="2.4.0-rc1" />
	<property name="ivy.jar.dir" value="${basedir}/ivy" />
	<property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />

	<!-- this targe will donwload ivy.jar if its inot in the "ivy" folder yet -->
	<target name="download-ivy" unless="skip.download">
		<mkdir dir="${ivy.jar.dir}"/>
		<!-- download Ivy from web site so that it can be used even without any special installation -->
		<echo message="installing ivy..."/>
		<get src="http://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar" dest="${ivy.jar.file}" usetimestamp="true"/>
	</target>

	<!--
			 ================================= 
			          target: install-ivy         
			            this target is not necessary if you put ivy.jar in your ant lib directory
			            if you already have ivy in your ant lib, you can simply remove this
			            target and the dependency the 'init' target has on it
			         ================================= 
			-->
	<target name="install-ivy" depends="download-ivy" description="--> install ivy">
		<!--
			 try to load ivy here from local ivy dir, in case the user has not already dropped
			              it into ant's lib dir (note that the latter copy will always take precedence).
			              We will not fail as long as local lib dir exists (it may be empty) and
			              ivy is in at least one of ant's lib dir or the local lib dir. 
			-->
		<path id="ivy.lib.path">
			<fileset dir="${ivy.jar.dir}" includes="*.jar"/>
		</path>
		<taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
	</target>

	<!-- PART 2: General properties definitions -->
	<property name="build.dir" value="build" />
	<property name="src.dir" value="src" />
	<property name="lib.dir" value="lib" />
	<property name="xjc.package" value="peoplestore.generated" />
	<property name="xjc.folder" value="peoplestore/generated" />


	<!-- ================================= 
	          target: resolve downloads the dependencies to your lib folder              
	         ================================= -->
	<target name="resolve" depends="install-ivy" description="--> retrieve dependencies with ivy">
		<ivy:retrieve pattern="${lib.dir}/[artifact]-[type]-[revision].[ext]"/>
	</target>


	<!-- paths where ivy libraries will be downloaded, use them as classpathref in your compilation and running tasks  -->
	<path id="lib.path.id">
		<fileset dir="${lib.dir}" />
	</path>


	<path id="run.path.id">
		<path refid="lib.path.id" />
		<fileset dir="${build.dir}">
			<include name="*.class" />
			<include name="**/*.class" />
			<exclude name="**/*Test*" />
		</fileset>
	</path>

	<!-- PART 3: compilation and execution targets for this session -->
	<target name="init" depends="install-ivy, resolve">
		<echo message="Init has been called" />
		<mkdir dir="${build.dir}" />
		<echo message="${build.dir} has been created" />
	</target>
	
	
	<!-- This target is used to clean the project -->
	<target name="clean">
		<echo message="Clean has been called" />
		
		<delete dir="${build.dir}" />
		<echo message="${build.dir} has been deleted" />
		
		<delete dir="${lib.dir}" />
		<echo message="${lib.dir} has been deleted" />
		
		<delete dir="${ivy.jar.dir}" />
	    <echo message="${ivy.dir} has been deleted" />
		
		<delete dir="${src.dir}/${xjc.folder}" />
		<echo message="${src.dir}/${xjc.folder} has been deleted" />
		
		<delete file="peopleMarshaller.xml" />
		<echo message="peopleMarshaller.xml has been deleted" />
		
		<delete file="people.json" />
		<echo message="people.json has been deleted" />
		
		<delete file="introsde-2015-assignment-1[CarloNicolò].txt" />
	    <echo message="introsde-2015-assignment-1[CarloNicolò].txt has been deleted" />
		
	</target>
	
	<!-- This target generate the classes using xjc based on the given .xsd schema -->
	<target name="generate" depends="init">
		<taskdef name="xjc" classname="com.sun.tools.xjc.XJCTask" classpathref="lib.path.id">
		</taskdef>
		<xjc schema="people.xsd" destdir="${src.dir}" package="${xjc.package}" />
	</target>

	<target name="compile" depends="init, generate">
		<echo message="Compile target has been called" />
		<javac srcdir="${src.dir}" destdir="${build.dir}" classpathref="lib.path.id" includeAntRuntime="false">
		</javac>
		<copy todir="${build.dir}" overwrite="true">
			<fileset dir="${src.dir}">
				<include name="*.xml" />
			</fileset>
		</copy>
	</target>
	
	
	<target name="execute.evaluation" depends="compile">
		<record name="introsde-2015-assignment-1[CarloNicolò].txt" action="start"/>
			<echo message="*********************************************" />
			<echo message="* execute.evaluation target has been called *" />
			<echo message="*********************************************" />
			<echo message="" />
			
			<echo message="==========================================================="/> 
			<echo message="*                          #Task1                         *"/>
			<echo message="*            Runs instruction 2 based on Lab 3            *"/>
			<echo message="* Function that prints all people in the list with detail *" />
			<echo message="===========================================================" />
			<java classname="XpathHealthProfile" classpath="build">
				<arg value="printAllPeople"/>
			</java>
			<echo message="========================= END Task1 ===========================" />
			
			<echo message="" />
			<echo message="=========================================================================================="/> 
			<echo message="*                                    #Task2                                              *"/>
			<echo message="*                      Runs instruction 3 based on Lab 3 with id = 5                     *"/>
			<echo message="*  A function which accepts an id as parameters HealthProfile of the person with that id *" />
			<echo message="==========================================================================================" />
			<java classname="XpathHealthProfile" classpath="build">
				<arg value="getPersonById"/>
				<arg value="5"/>
			</java>
			<echo message="================================== END Task2 ==================================="/>
			
			<echo message="" />
		    <echo message="================================================================================================================="/> 
			<echo message="                                            #Task3                                                              *"/>
			<echo message="                         Runs instruction 3 based on Lab 3 with weight > 90                                     *"/>
			<echo message="* A function which accepts a weight and an operator as parameters and prints people that fulfill that condition *" />
			<echo message="=================================================================================================================" />
			<java classname="XpathHealthProfile" classpath="build">
				<arg value="getPersonByWeight"/>
				<arg value="90"/>
				<arg value=">"/>
			</java>
			<echo message="========================================== END Task3 ============================================================" />
			
			<echo message="" />
		    <echo message="================================================================================================================="/> 
			<echo message="                                            #Task4                                                              *"/>
			<echo message="                               Runs instruction 2 based on Lab 4                                                *"/>
	        <echo message="              (marshaling to XMLcreate 3 persons using java and marshal them to XML)                            *"/>               
			<echo message="   Write a java application that does the marshalling using classes generated with JAXB XJC                     *"/>
			<echo message="=================================================================================================================" />
			<java classname="peoplestore.JAXBMarshaller" classpath="${build.dir}">
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="**/*.jar" />
					<include name="*.jar" />
				</fileset>
			</classpath>
		        </java>
			<echo message="========================================== END Task4 ============================================================" />
			
			
			<echo message="" />
		    <echo message="================================================================================================================="/> 
			<echo message="                                            #Task5                                                              *"/>
			<echo message="                               Runs instruction 2 based on Lab 4                                                *"/>
	        <echo message="                      Runs instruction 2 based on Lab 4 (un-marshaling from XML)                                *"/>               
			<echo message="   Write a java application that does the un-marshalling using classes generated with JAXB XJC                  *"/>
			<echo message="=================================================================================================================" />
			<java classname="peoplestore.JAXBUnMarshaller" classpath="${build.dir}">
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="**/*.jar" />
					<include name="*.jar" />
				</fileset>
			</classpath>
		        </java>
			<echo message="========================================== END Task5 ============================================================" />
			
			
			<echo message="" />
		    <echo message="================================================================================================================="/> 
			<echo message="                                            #Task6                                                              *"/>
			<echo message="                               Runs instruction 3 based on Lab 4                                                *"/>
			<echo message="            Marshaling to JSON - create 3 persons using java and marshal them to JSON                           *"/>
			<echo message="=================================================================================================================" />
			<java classname="JSONMarshaller" classpath="${build.dir}">
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="**/*.jar" />
					<include name="*.jar" />
				</fileset>
			</classpath>
		        </java>
			<echo message="========================================== END Task6 ============================================================" />
		<record name="introsde-2015-assignment-1[CarloNicolò].txt" action="stop"/>
		<echo message="Created the file introsde-2015-assignment-1[CarloNicolò].txt containing the output of the execute.evaluation target" />
		</target>
	
	
	<!-- Execute only before compiling or executing execute.evaluation -->
	<!-- This target execute the method getHeightByName and return the weight of the person 
	with firstname and lastname passed as arg value -->
	<target name="execute.GetHeightByName">
	        <java classname="XpathHealthProfile" classpath="build">
	            <arg value="getHeightByName"/>
	            <arg value="Everett"/>
	            <arg value="Borer"/>
	        </java>
	    </target>
	
	<!-- Execute only before compiling or executing execute.evaluation -->
	<!-- This target execute the method getWeightByName and return the weight of the person 
		with firstname and lastname passed as arg value -->
	<target name="execute.GetWeightByName">
		        <java classname="XpathHealthProfile" classpath="build">
		            <arg value="getWeightByName"/>
		            <arg value="Sam"/>
		            <arg value="Willms"/>
		        </java>
		    </target>
	
	
	
	

</project>